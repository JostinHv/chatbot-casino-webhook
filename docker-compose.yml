# üê≥ Docker Compose para Chatbot Casino Backend
# Arquitectura Hexagonal con Node.js y MySQL

version: '3.8'

services:
  # üöÄ Aplicaci√≥n Backend
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-casino-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root_password
      - DB_NAME=chatbot_casino_db
      - LOG_LEVEL=info
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./database:/app/database:ro
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üóÑÔ∏è Base de Datos MySQL
  db:
    image: mysql:8.0
    container_name: chatbot-casino-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: chatbot_casino_db
      MYSQL_USER: chatbot_user
      MYSQL_PASSWORD: chatbot_pass
    ports:
      - "3306:3306"
    volumes:
      - ./database:/docker-entrypoint-initdb.d:ro
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - chatbot-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # üìä phpMyAdmin (Opcional - Solo para desarrollo)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: chatbot-casino-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - chatbot-network
    profiles:
      - dev

  # üîç Redis (Opcional - Para cache)
  redis:
    image: redis:7-alpine
    container_name: chatbot-casino-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot-network
    profiles:
      - cache

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  chatbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 