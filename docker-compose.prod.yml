# üê≥ Docker Compose para Producci√≥n
# Chatbot Casino Backend - Arquitectura Hexagonal

version: '3.8'

services:
  # üöÄ Aplicaci√≥n Backend (Producci√≥n)
  app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: chatbot-casino-app-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=chatbot_user
      - DB_PASSWORD=chatbot_pass_prod
      - DB_NAME=chatbot_casino_db
      - LOG_LEVEL=warn
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - chatbot-network-prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # üóÑÔ∏è Base de Datos MySQL (Producci√≥n)
  db:
    image: mysql:8.0
    container_name: chatbot-casino-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password_prod
      MYSQL_DATABASE: chatbot_casino_db
      MYSQL_USER: chatbot_user
      MYSQL_PASSWORD: chatbot_pass_prod
    ports:
      - "3306:3306"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - mysql_data_prod:/var/lib/mysql
    networks:
      - chatbot-network-prod
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # üîç Redis (Cache para producci√≥n)
  redis:
    image: redis:7-alpine
    container_name: chatbot-casino-redis-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - chatbot-network-prod
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # üìä Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: chatbot-casino-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - chatbot-network-prod
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  chatbot-network-prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 